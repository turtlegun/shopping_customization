/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 leander_tshirt.glb 
*/

import React, { useRef, useState } from 'react'
import { Decal, useGLTF, useTexture } from '@react-three/drei'
import { useControls } from "leva";
import { degToRad } from "three/src/math/MathUtils.js";

import goku from "./goku.jpg"



export default function Model(props) {

  const [image_size, setImage_size] = useState([1,1,1]);
  const [rotation, setRotation] = useState([0, 0, 0]);
  const [rotation2, setRotation2] = useState([0, 0, 0]);
  const [back_font_size, setBack_font_size] = useState([1,1,1]);
  const { nodes, materials } = useGLTF('/leander_tshirt.glb')







let which_side=props.image_side




  useControls({
    angle: {
        min: degToRad(0),
        max: degToRad(360),
        value: 0,
        step: 0.01,
        onChange: (value) => {
            const x = Math.sin(value);
            const z = Math.cos(value);
            const rot = Math.atan2(x, z);
            setRotation2(() => [0, 0, rot]);

        },
    },





    image_size: {
        min: 0.1,
        max: 2,
        value: 0.25,
        step: 0.01,
        onChange: (value) => {
            setImage_size(() => [value, value, 1.5]);
        },
    },
});

useControls({
  back_font_size: {
        value: 0.25,
        min: 0.01,
        max: 0.5,
        step: 0.01,
        onChange: (value) => {
          setBack_font_size(() => [-value, value, 1.5]);
        },
    }, 

    angle2: {
        min: degToRad(0),
        max: degToRad(360),
        value: 0,
        step: 0.01,
        onChange: (value) => {
            const x = Math.sin(value);
            const z = Math.cos(value);
            const rot = Math.atan2(x, z);
            setRotation(() => [0, -0.01, rot]);
        },
    },
});





/* let decal = props.position ? props.position : [0, 0, 0];
 */
let logoTexture=props.image ? useTexture(props.image) :useTexture(goku)




  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.T_Shirt_Front.geometry} material={materials.Front_Shader_1} >
      {   props.image.map((imageUrl, index) => {
  const texture = props.image ? useTexture(props.image) :useTexture(goku)
  const decal =props.position ? props.position[index] : [0, 0, 0];
  let x=0
  let y=0.04
  let z=0.15

  let new_position=[0,0,0]

  console.log(`the decal is ${JSON.stringify(decal)}`);
  console.log(new_position);
  return (
    <Decal key={index}  position={[0,0,0]} rotation={rotation} scale={image_size} map={texture} />
  );
}) }
      {/*
        
      Array.isArray(logoTexture) && logoTexture.map((imageUrl, index) => (
    <Decal key={index} 
    
    position={decal}
    rotation={rotation}
    scale={image_size}
    map={imageUrl} />
))

*/}

  
 
   { /*<Decal
                    position={decal}
                    rotation={rotation}
                    scale={image_size}
                    map={logoTexture}
                    
/>*/}



              

        </mesh>
      <mesh geometry={nodes.T_Shirt_Back.geometry} material={materials.Back_Shader_2} >

      {  /* which_side==='back_side' &&(
   
    <Decal
                    position={decal}
                    rotation={rotation}
                    scale={back_font_size}
                    map={logoTexture}
                    
                />)
*/}


</mesh>

      <mesh geometry={nodes.T_Shirt_Decal_Front1.geometry} material={materials.Decal_shader} position={[0, 0, 0.001]} />
      <mesh geometry={nodes.polySurface1.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface10.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface11.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface12.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface13.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface14.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface15.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface16.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface17.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface18.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface19.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface2.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface20.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface21.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface22.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface23.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface24.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface25.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface26.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface27.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface3.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface4.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface6.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface7.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.polySurface9.geometry} material={materials.lambert2} />
      <mesh geometry={nodes.T_Shirt_Sleeve_Left.geometry} material={materials.Left_Sleeve_Shader_1} >

       { /* which_side==='left_side' &&(
      <Decal
                    position={decal}
                    rotation={rotation}
                    scale={image_size}
                    map={logoTexture}
                    
                />)
       */}


        </mesh>
      <mesh geometry={nodes.T_Shirt_Sleeve_Right.geometry} material={materials.Right_Sleeve_Shader_1} >
      { /* which_side==='right_side' &&(
      <Decal
                    position={decal}
                    rotation={rotation}
                    scale={image_size}
                    map={logoTexture}
                    
                />)
      */}

        </mesh>
    </group>
  )
}

useGLTF.preload('/leander_tshirt.glb')
