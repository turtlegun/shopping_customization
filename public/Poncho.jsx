/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 poncho.glb 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import polyster from './second_design.jpg';
import axios from 'axios';
import { Buffer } from 'buffer';

export default function Model(props) {



  const[iamge_backend,setBackend_image]=useState()

    const [images, setImages] = useState([]);


  useEffect(() => {
    fetchImages();



    const interval = setInterval(fetchImages, 5000); // Fetch every 5 seconds

    return () => clearInterval(interval);
  }, []);



  useEffect(() => {
      const material = props.material; 
      images.forEach((image) => {
          if (material === image.name) {
              console.log(image.name)
              let source = `data:image/${image.img.contentType};base64,${Buffer.from(image.img.data).toString('base64')}`
              setBackend_image(source);
          }
      });
  }, [props.material, images]); 


  const fetchImages = async () => {
    try {
      const response = await axios.get('http://localhost:3000/send_image');
      setImages(response.data);
    } catch (error) {
      console.error('Error fetching images:', error);
    }
  };




  let textureprops
  if (iamge_backend) {
      textureprops = useTexture({
          map: iamge_backend,
      });
  }

  else {

      textureprops = useTexture({
          map: polyster,
      })

  }


const selected_part=props.part_selected

  const { nodes, materials } = useGLTF('/poncho.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cloth_mesh.geometry} material={materials.Rib_2X2_468gsm_263076} />

      {/* head mesh */}
      <mesh geometry={nodes.Cloth_mesh_1.geometry} material={materials.Rib_2X2_468gsm_263076} >


</mesh>

      <mesh geometry={nodes.Cloth_mesh_2.geometry} material={materials.Rib_2X2_468gsm_263076} />
      <mesh geometry={nodes.Cloth_mesh_3.geometry} material={materials.Rib_2X2_468gsm_263076} />

      
      <mesh geometry={nodes.Cloth_mesh_4.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_5.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_6.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_7.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_8.geometry} material={materials.Rib_2X2_468gsm_263076} />
      

      {/* upper mesh */}
      <mesh geometry={nodes.Cloth_mesh_9.geometry} material={materials.Rib_2X2_468gsm_263076} >

      {selected_part === "Upper Skirt" && (
        <meshStandardMaterial {...textureprops} />
    )}
        </mesh>



      
      <mesh geometry={nodes.Cloth_mesh_10.geometry} material={materials.Rib_2X2_468gsm_263076} />

      
      <mesh geometry={nodes.Cloth_mesh_11.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_12.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_13.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_14.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_15.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_16.geometry} material={materials.Rib_2X2_468gsm_263076} />

      
      <mesh geometry={nodes.Cloth_mesh_17.geometry} material={materials.Rib_2X2_468gsm_263076} />
      
      <mesh geometry={nodes.Cloth_mesh_18.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266277} />
      <mesh geometry={nodes.Cloth_mesh_19.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266284} />
      <mesh geometry={nodes.Cloth_mesh_20.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266277} />
      
      
      
      
      
      <mesh geometry={nodes.Cloth_mesh_21.geometry} material={materials.Trim_Full_Grain_Leather_256171} />
      <mesh geometry={nodes.Cloth_mesh_22.geometry} material={materials.Trim_Full_Grain_Leather_256171} />
      <mesh geometry={nodes.Cloth_mesh_23.geometry} material={materials.Trim_Full_Grain_Leather_256171} />

{/* small peices */}

      <mesh geometry={nodes.Cloth_mesh_24.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266277} />
      <mesh geometry={nodes.Cloth_mesh_25.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266284} />
      <mesh geometry={nodes.Cloth_mesh_26.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266277} />
     
     
     {/* bottom mesh */}
      <mesh geometry={nodes.Cloth_mesh_27.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266277} >
      <meshStandardMaterial {...textureprops} />

        </mesh>

 {/* bottom mesh a f */}

        <mesh geometry={nodes.Cloth_mesh_28.geometry} material={materials.Sherpa_Shearling_Curly_Fleece_Poly_360gsm_266284} >

        {selected_part === "Lower Skirt" && (
        <meshStandardMaterial {...textureprops} />
    )}
    
        </mesh>
      
     
     
    </group>
  )
}

useGLTF.preload('/poncho.glb')
